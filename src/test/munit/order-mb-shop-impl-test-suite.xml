<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="order-mb-shop-impl-test-suite.xml" />
	<global-property doc:name="Global Property" doc:id="27e336b5-cf2b-4816-8733-6fb29e173769" name="mule.vault.key" value="mulesoft" />
	<munit:test name="order-mb-shop-impl-test-suite-get-order-by-idTest" description="Test" doc:id="691c10e9-d159-4537-a220-d4af5af08330" expectedErrorType="APP:NOT_FOUND">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock database select with not found value" doc:id="dae2bb59-75e1-4d0d-8035-e80f8f6a765a" processor="db:select">
				<munit-tools:then-return >
					<munit-tools:payload value="#[[]]" mediaType="application/java"/>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="get-order-by-id" doc:id="7e61815c-5c91-40ef-91b0-ca14c11fa26d" name="get-order-by-id"/>
		</munit:execution>
	</munit:test>
	<munit:test name="order-mb-shop-impl-test-suite-get-order-itemsTest" description="Test" doc:id="c41890de-33c5-4c79-ba4e-5d912a8159fc" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="bcb9b976-776c-4a40-b08d-f1af1cd4eea8" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="doc:name" whereValue="get order items" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[[{"id":1,"order_id": 1, "item_id": 1, "item_count": 2}]]' mediaType="application/java" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="c11393c1-e4d2-4597-ab60-9fa2e8a3035b" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute attributeName="doc:name" whereValue="get item details" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="item" value='#[[{"id": 2, "name": "pants", "cost": 90.50}]]' mediaType="application/java" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="get-order-items" doc:id="162bd5ca-59e5-4195-be49-017f5685e028" name="get-order-items"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Logger" doc:id="6988768c-70e9-4b71-ad82-46ec234df237" message="#[payload]"/>
			<munit-tools:assert-that doc:name="Assert that" doc:id="68b9e5dd-ebfa-454b-823f-b46833cefbc9" expression="#[payload]" is='#[MunitTools::equalTo([{itemId:2, item:"pants", cost:90.5, quantity:2}])]'/>
		</munit:validation>
	</munit:test>

</mule>
